<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.debezium</groupId>
        <artifactId>debezium-parent</artifactId>
        <version>3.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>debezium-connector-cockroachdb</artifactId>
    <version>3.2.0-SNAPSHOT</version>
    <name>Debezium Connector for CockroachDB</name>
    <description>Kafka Connect source connector for CockroachDB changefeeds</description>
    <packaging>jar</packaging>

    <scm>
        <connection>scm:git:git@github.com:debezium/debezium-connector-cockroachdb.git</connection>
        <developerConnection>scm:git:git@github.com:debezium/debezium-connector-cockroachdb.git</developerConnection>
        <url>https://github.com/debezium/debezium-connector-cockroachdb</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <version.debezium>${project.version}</version.debezium>
        <cockroachdb.image>cockroachdb/cockroach</cockroachdb.image>
        <cockroachdb.image.tag>v25.2.2</cockroachdb.image.tag>
        <cockroachdb.init.timeout>300000</cockroachdb.init.timeout>
        <docker.skip>false</docker.skip>
        <docker.showLogs>true</docker.showLogs>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-core</artifactId>
                <version>${version.debezium}</version>
            </dependency>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-embedded</artifactId>
                <version>${version.debezium}</version>
            </dependency>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-api</artifactId>
                <version>${version.debezium}</version>
            </dependency>
            <dependency>
                <groupId>io.debezium</groupId>
                <artifactId>debezium-connector-jdbc</artifactId>
                <version>${version.debezium}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Core Debezium APIs -->
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-connector-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- Test and runtime tooling -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>5.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Debezium Storage Modules -->
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-storage-kafka</artifactId>
            <version>${version.debezium}</version>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-storage-file</artifactId>
            <version>${version.debezium}</version>
        </dependency>
        <!-- Provided for build consistency -->
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-ide-configs</artifactId>
            <version>${version.debezium}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-checkstyle</artifactId>
            <version>${version.debezium}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-assembly-descriptors</artifactId>
            <version>${version.debezium}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-revapi</artifactId>
            <version>${version.debezium}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Test dependencies for integration tests -->
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-embedded</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.debezium</groupId>
            <artifactId>debezium-embedded</artifactId>
            <version>${version.debezium}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.apicurio</groupId>
            <artifactId>apicurio-registry-utils-converter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-connect-avro-converter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <!-- Compiler Plugin -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>17</release>
                </configuration>
            </plugin>

            <!-- Docker support for CockroachDB test container -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <verbose>true</verbose>
                    <imagePullPolicy>IfNotPresent</imagePullPolicy>
                    <images>
                        <image>
                            <name>cockroachdb/cockroach:${cockroachdb.image.tag}</name>
                            <run>
                                <cmd>start-single-node --insecure</cmd>
                                <env>
                                    <COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING>true</COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING>
                                </env>
                                <ports>
                                    <port>26257:26257</port>
                                    <port>8080:8080</port>
                                </ports>
                                <wait>
                                    <url>http://localhost:8080</url>
                                    <time>${cockroachdb.init.timeout}</time>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <name>confluentinc/cp-kafka:7.4.0</name>
                            <run>
                                <env>
                                    <KAFKA_BROKER_ID>1</KAFKA_BROKER_ID>
                                    <KAFKA_ZOOKEEPER_CONNECT>localhost:2181</KAFKA_ZOOKEEPER_CONNECT>
                                    <KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT</KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>
                                    <KAFKA_ADVERTISED_LISTENERS>PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092</KAFKA_ADVERTISED_LISTENERS>
                                    <KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>1</KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>
                                    <KAFKA_TRANSACTION_STATE_LOG_MIN_ISR>1</KAFKA_TRANSACTION_STATE_LOG_MIN_ISR>
                                    <KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR>1</KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR>
                                    <KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS>0</KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS>
                                    <KAFKA_JMX_PORT>9101</KAFKA_JMX_PORT>
                                    <KAFKA_JMX_HOSTNAME>localhost</KAFKA_JMX_HOSTNAME>
                                    <KAFKA_AUTO_CREATE_TOPICS_ENABLE>true</KAFKA_AUTO_CREATE_TOPICS_ENABLE>
                                </env>
                                <ports>
                                    <port>9092:9092</port>
                                    <port>29092:29092</port>
                                    <port>9101:9101</port>
                                </ports>
                                <wait>
                                    <tcp>localhost:9092</tcp>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <name>confluentinc/cp-zookeeper:7.4.0</name>
                            <run>
                                <env>
                                    <ZOOKEEPER_CLIENT_PORT>2181</ZOOKEEPER_CLIENT_PORT>
                                    <ZOOKEEPER_TICK_TIME>2000</ZOOKEEPER_TICK_TIME>
                                </env>
                                <ports>
                                    <port>2181:2181</port>
                                </ports>
                                <wait>
                                    <tcp>localhost:2181</tcp>
                                    <time>30000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start-cockroachdb</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-cockroachdb</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Failsafe for integration test lifecycle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipTests>${skipITs}</skipTests>
                    <systemPropertyVariables>
                        <cockroachdb.host>localhost</cockroachdb.host>
                        <cockroachdb.port>26257</cockroachdb.port>
                        <kafka.bootstrap.servers>localhost:9092</kafka.bootstrap.servers>
                        <kafka.advertised.listeners>localhost:29092</kafka.advertised.listeners>
                        <zookeeper.connect>localhost:2181</zookeeper.connect>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>skip-integration-tests</id>
            <activation>
                <property>
                    <name>skipITs</name>
                </property>
            </activation>
            <properties>
                <docker.skip>true</docker.skip>
            </properties>
        </profile>
        <profile>
            <id>quick</id>
            <activation>
                <property>
                    <name>quick</name>
                </property>
            </activation>
            <properties>
                <skipITs>true</skipITs>
                <docker.skip>true</docker.skip>
            </properties>
        </profile>
    </profiles>

</project>
